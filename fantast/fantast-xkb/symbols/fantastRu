// Generated by KLFC 1.5.5
// https://github.com/39aldo39/klfc

default
xkb_symbols "basic" {
    key <TLDE> { [  Cyrillic_io,  Cyrillic_IO ] };
    key <AE01> { [            1,       exclam ] };
    key <AE02> { [            2,     quotedbl ] };
    key <AE03> { [            3,   numbersign ] };
    key <AE04> { [            4,    semicolon ] };
    key <AE05> { [            5,      percent ] };
    key <AE06> { [            6,        colon ] };
    key <AE07> { [   underscore,   underscore ] };
    key <AE08> { [            7,     question ] };
    key <AE09> { [            8,   underscore ] };
    key <AE10> { [            9,   underscore ] };
    key <AE11> { [            0,   underscore ] };
    key <AE12> { [        minus,   underscore ] };
    key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI,  asciicircum ] };
    key <AD02> { [ Cyrillic_tse, Cyrillic_TSE,    ampersand ] };
    key <AD03> { [   Cyrillic_u,   Cyrillic_U,  bracketleft ] };
    key <AD04> { [  Cyrillic_ka,  Cyrillic_KA, bracketright ] };
    key <AD05> { [  Cyrillic_ie,  Cyrillic_IE ] };
    key <AD06> { [  Cyrillic_ha,  Cyrillic_HA ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AD07> { [  Cyrillic_en,  Cyrillic_EN,        Prior ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<PGUP>,clearMods=LevelFive) ] };
    key <AD08> { [ Cyrillic_ghe, Cyrillic_GHE,         Home ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<HOME>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_EXTEND_ALPHABETIC";
    key <AD09> { [ Cyrillic_sha, Cyrillic_SHA,           Up,           Up ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<UP>,mods=Mod1,clearMods=LevelThree), Redirect(key=<UP>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AD10> { [ Cyrillic_shcha, Cyrillic_SHCHA,          End ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<END>,clearMods=LevelFive) ] };
    key <AD11> { [  Cyrillic_ze,  Cyrillic_ZE,       Delete ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<DELE>,clearMods=LevelFive) ] };
    key.type[Group1] = "TWO_LEVEL";
    key <AD12> { [        slash,     question ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AC01> { [  Cyrillic_ef,  Cyrillic_EF,          bar ] };
    key <AC02> { [ Cyrillic_yeru, Cyrillic_YERU,         plus ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_EXTEND_ALPHABETIC";
    key <AC03> { [  Cyrillic_ve,  Cyrillic_VE,    parenleft,    Control_L ],
                 actions[Group1] = [ NoAction(), NoAction(), NoAction(), SetMods(mods=Control) ] };
    key <AC04> { [   Cyrillic_a,   Cyrillic_A,   parenright,      Shift_L ],
                 actions[Group1] = [ NoAction(), NoAction(), NoAction(), SetMods(mods=Shift) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AC05> { [  Cyrillic_pe,  Cyrillic_PE,        equal ] };
    key.type[Group1] = "ALPHABETIC";
    key <AC06> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AC07> { [  Cyrillic_er,  Cyrillic_ER,         Next ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<PGDN>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_EXTEND_ALPHABETIC";
    key <AC08> { [   Cyrillic_o,   Cyrillic_O,         Left,         Left ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<LEFT>,mods=Mod1,clearMods=LevelThree), Redirect(key=<LEFT>,clearMods=LevelFive) ] };
    key <AC09> { [  Cyrillic_el,  Cyrillic_EL,         Down,         Down ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<DOWN>,mods=Mod1,clearMods=LevelThree), Redirect(key=<DOWN>,clearMods=LevelFive) ] };
    key <AC10> { [  Cyrillic_de,  Cyrillic_DE,        Right,        Right ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<RGHT>,mods=Mod1,clearMods=LevelThree), Redirect(key=<RGHT>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AC11> { [ Cyrillic_zhe, Cyrillic_ZHE,    BackSpace ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<BKSP>,clearMods=LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <BKSL> { [   Cyrillic_e,   Cyrillic_E ] };
    key <LSGT> { [  Cyrillic_yu,  Cyrillic_YU ] };
    key.type[Group1] = "NONE_SHIFT_ALTGR_ALPHABETIC";
    key <AB01> { [  Cyrillic_ya,  Cyrillic_YA,    backslash ] };
    key <AB02> { [ Cyrillic_che, Cyrillic_CHE,     asterisk ] };
    key <AB03> { [  Cyrillic_es,  Cyrillic_ES,    braceleft ] };
    key <AB04> { [  Cyrillic_em,  Cyrillic_EM,   braceright ] };
    key.type[Group1] = "ALPHABETIC";
    key <AB05> { [   Cyrillic_i,   Cyrillic_I ] };
    key <AB06> { [  Cyrillic_be,  Cyrillic_BE ] };
    key <AB07> { [  Cyrillic_te,  Cyrillic_TE ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AB08> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN,         Left ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<LEFT>,mods=Control,clearMods=LevelFive) ] };
    key.type[Group1] = "TWO_LEVEL";
    key <AB09> { [        comma,         less ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND";
    key <AB10> { [       period,      greater,        Right ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<RGHT>,mods=Control,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_ALTGR";
    key <UP> { [           Up,           Up ],
                 actions[Group1] = [ Redirect(key=<UP>), Redirect(key=<UP>,mods=Mod1,clearMods=LevelThree) ] };
    key <LEFT> { [         Left,         Left ],
                 actions[Group1] = [ Redirect(key=<LEFT>), Redirect(key=<LEFT>,mods=Mod1,clearMods=LevelThree) ] };
    key <DOWN> { [         Down,         Down ],
                 actions[Group1] = [ Redirect(key=<DOWN>), Redirect(key=<DOWN>,mods=Mod1,clearMods=LevelThree) ] };
    key <RGHT> { [        Right,        Right ],
                 actions[Group1] = [ Redirect(key=<RGHT>), Redirect(key=<RGHT>,mods=Mod1,clearMods=LevelThree) ] };
    key <TAB> { [          Tab,          Tab ],
                 actions[Group1] = [ Redirect(key=<TAB>), Redirect(key=<TAB>,clearMods=LevelThree) ] };
    key.type[Group1] = "NONE_ALTGR_EXTEND";
    key <SPCE> { [        space, ISO_Next_Group,    Control_L ],
                 actions[Group1] = [ NoAction(), LockGroup(group=+1), SetMods(mods=Control) ] };
    key.type[Group1] = "NONE_EXTEND";
    key <ESC> { [       Escape,    Caps_Lock ],
                 actions[Group1] = [ Redirect(key=<ESC>), LockMods(mods=Lock) ] };
    key.type[Group1] = "ONE_LEVEL";
    key <LCTL> { [ ISO_Level5_Shift ],
                 actions[Group1] = [ SetMods(mods=LevelFive) ],
                 vmods=LevelFive };
    modifier_map Mod3 { ISO_Level5_Shift };
    include "level3(ralt_switch)"
};
